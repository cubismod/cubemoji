variables:
  DOCKER_TLS_CERTDIR: "/certs"
  GIT_SUBMODULE_STRATEGY: "recursive"
  FLY_ACCESS_TOKEN: $FLY_ACCESS_TOKEN
  QUAY_CONF: $QUAY_CONF
  REPO_NAME: "quay.io/cubismod/cubemoji"
  CACHE_REPO: "quay.io/cubismod/cubemoji-cache"
  SETTINGS__GITLAB_ACCESS_TOKEN: $SETTINGS__GITLAB_ACCESS_TOKEN
  DEPENDABOT_IMAGE: docker.io/andrcuns/dependabot-gitlab:0.16.0
  CONTAINER_SLUG: $CI_COMMIT_REF_SLUG$CI_COMMIT_SHA
  CONTAINER_DEST: $REPO_NAME:$CONTAINER_SLUG
  DOCKER_AUTH: $HOME/.docker/config.json
  SKOP_AUTH: /tmp/skopeo.json
  GIT_DEPTH: 10
  WEBHOOK_URL: $WEBHOOK_URL

stages:
  - build
  - housekeeping
  - scan
  - maintain
  - deploy_stage
  - deploy_prod

# don't run builds if any of the Docker files
# haven't actually changed
.build_rule:
  change_rule: &change_rule
    if: '$CI_PIPELINE_SOURCE != "schedule"'
    changes:
    - Dockerfile
    - scripts/
    - assets/
    - yarn.lock
    - package.json
    - tsconfig.json
    - .eslintrc.json
    - src/
    - PRIVACY.md
    - .gitlab-ci.yml

build:
  stage: build
  tags:
    - cubemoji
  image:
    name: quay.io/buildah/stable
    entrypoint: [""]
  interruptible: true
  rules:
    - *change_rule
  script:
    - mkdir -p $HOME/.docker
    - echo $QUAY_CONF > $DOCKER_AUTH
    - cd ${CI_PROJECT_DIR}
    - >-
      buildah build \
      --arch=amd64 \
      --cache-from ${CACHE_REPO} \
      --cache-to ${CACHE_REPO} \
      -f ${CI_PROJECT_DIR}/Dockerfile \
      --layers true \
      -t ${CONTAINER_DEST} \
      --label quay.expires-after=100w \
      ${CI_PROJECT_DIR}
    - buildah push ${CONTAINER_DEST}
    

lint:
  stage: housekeeping
  tags:
    - cubemoji
  image:
    name: ${CONTAINER_DEST}
  rules:
    - *change_rule
  interruptible: true
  script:
    - cd /usr/src/cubemoji
    - yarn install  # install dev deps as well
    - npm run audit
    - npm run lint

skopeo_copy:
  stage: housekeeping
  tags:
    - cubemoji
  image:
    name: alpine
  before_script:
    - echo ${QUAY_CONF} > ${SKOP_AUTH}
  allow_failure: true
  script:
    - apk add skopeo
    - >-
      skopeo copy 
      docker://${CONTAINER_DEST} docker://${REPO_NAME}:latest
      --authfile ${SKOP_AUTH}
  interruptible: true
  rules:
      - if: '$CI_COMMIT_BRANCH == "main" && ($CI_PIPELINE_SOURCE != "merge_request_event" || $CI_PIPELINE_SOURCE != "schedule")'

deploy_stage:
  stage: deploy_stage
  tags:
    - cubemoji
  image:
    name: curlimages/curl
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - *change_rule
  script:
    - cd ${CI_PROJECT_DIR}/scripts/cubemoji-dev/
    - ./stage_deploy.sh

deploy_prod:
  stage: deploy_prod
  tags:
    - cubemoji
  image:
    name: curlimages/curl
  rules:
    - if: $CI_PIPELINE_SOURCE != "push"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - fly.toml
  script:
    - cd ${CI_PROJECT_DIR}
    - ${CI_PROJECT_DIR}/scripts/deploy.sh

# dependabot setup
# https://gitlab.com/dependabot-gitlab/dependabot-standalone
.dependabot-gitlab:
  stage: maintain
  image:
    name: $DEPENDABOT_IMAGE
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    RAILS_ENV: production
    SECRET_KEY_BASE: key
    PACKAGE_MANAGER: $CI_JOB_NAME
    SETTINGS__GITLAB_URL: $CI_SERVER_URL
    SETTINGS__STANDALONE: "true"
    SETTINGS__LOG_COLOR: "true"
  rules:
    - if: $DEPENDENCY_UPDATES_DISABLED
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - cd /home/dependabot/app
    - bundle exec rake "dependabot:update[$PROJECT_PATH,$PACKAGE_MANAGER,$DIRECTORY]"

bundler:
  extends: .dependabot-gitlab

npm:
  extends: .dependabot-gitlab

docker:
  extends: .dependabot-gitlab

include:
  - project: "dependabot-gitlab/dependabot-standalone"
    file: ".gitlab-ci.yml"
