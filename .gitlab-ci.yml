# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  GIT_SUBMODULE_STRATEGY: "recursive"
  FLY_ACCESS_TOKEN: $FLY_ACCESS_TOKEN
  QUAY_CONF: $QUAY_CONF
  REPO_NAME: "quay.io/cubismod/cubemoji"
  CACHE_REPO: "quay.io/cubismod/cubemoji-cache"
  SETTINGS__GITLAB_ACCESS_TOKEN: $SETTINGS__GITLAB_ACCESS_TOKEN
  DEPENDABOT_IMAGE: docker.io/andrcuns/dependabot-gitlab:0.16.0
  CONTAINER_SLUG: $CI_COMMIT_REF_SLUG$CI_COMMIT_SHA
  CONTAINER_DEST: $REPO_NAME:$CONTAINER_SLUG
  KANIKO_AUTH: /kaniko/.docker/config.json
  SKOP_AUTH: /tmp/skopeo.json
  GIT_DEPTH: 10

stages:
  - build
  - housekeeping
  - scan
  - maintain
  - deploy_stage

# don't run builds if any of the Docker files
# haven't actually changed
.build_rule:
  change_rule: &change_rule
    if: '$CI_PIPELINE_SOURCE != "schedule"'
    changes:
    - Dockerfile
    - scripts/
    - assets/
    - yarn.lock
    - package.json
    - tsconfig.json
    - .eslintrc.json
    - src/
    - PRIVACY.md
    - .gitlab-ci.yml

build:
  stage: build
  tags:
    - cubemoji
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  interruptible: true
  rules:
    - *change_rule
  script:
    - mkdir -p /kaniko/.docker
    - echo $QUAY_CONF > $KANIKO_AUTH
    - >-
      /kaniko/executor
      --context ${CI_PROJECT_DIR}
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --cache-copy-layers
      --cache=true
      --cache-repo ${CACHE_REPO}
      --snapshotMode=redo
      --skip-unused-stages=true
      --reproducible
      --label quay.expires-after=100w
      --destination ${CONTAINER_DEST}
    

lint:
  stage: housekeeping
  tags:
    - cubemoji
  image:
    name: ${CONTAINER_DEST}
  rules:
    - *change_rule
  interruptible: true
  script:
    - cd /usr/src/cubemoji
    - yarn install  # install dev deps as well
    - npm run audit
    - npm run lint

skopeo_copy:
  stage: housekeeping
  tags:
    - cubemoji
  image:
    name: alpine
  before_script:
    - echo ${QUAY_CONF} > ${SKOP_AUTH}
  allow_failure: true
  script:
    - apk add skopeo
    - >-
      skopeo copy 
      docker://${CONTAINER_DEST} docker://${REPO_NAME}:latest
      --authfile ${SKOP_AUTH}
  interruptible: true
  rules:
      - if: '$CI_COMMIT_BRANCH == "main" && ($CI_PIPELINE_SOURCE != "merge_request_event" || $CI_PIPELINE_SOURCE != "schedule")'

deploy_stage:
  stage: deploy_stage
  tags:
    - cubemoji
  image:
    name: alpine
  rules:
    - *change_rule
  script:
    - apk add curl
    - ${CI_PROJECT_DIR}/scripts/cubemoji-dev/stage_deploy.sh

# dependabot setup
# https://gitlab.com/dependabot-gitlab/dependabot-standalone
.dependabot-gitlab:
  stage: maintain
  image:
    name: $DEPENDABOT_IMAGE
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    RAILS_ENV: production
    SECRET_KEY_BASE: key
    PACKAGE_MANAGER: $CI_JOB_NAME
    SETTINGS__GITLAB_URL: $CI_SERVER_URL
    SETTINGS__STANDALONE: "true"
    SETTINGS__LOG_COLOR: "true"
  rules:
    - if: $DEPENDENCY_UPDATES_DISABLED
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - cd /home/dependabot/app
    - bundle exec rake "dependabot:update[$PROJECT_PATH,$PACKAGE_MANAGER,$DIRECTORY]"

bundler:
  extends: .dependabot-gitlab

npm:
  extends: .dependabot-gitlab

docker:
  extends: .dependabot-gitlab

include:
  - project: "dependabot-gitlab/dependabot-standalone"
    file: ".gitlab-ci.yml"
